Part : <./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/ReactorTiny"
	IconNameKey = "Parts/ReactorTinyIcon"
	ID = emmy.reactor_tiny
	EditorGroup = "Power"
	DescriptionKey = "Parts/ReactorTinyDesc"
	Resources
	[//small 25k total. tiny ??k total
		[steel, 20] 
		[coil, 32]
		[enriched_uranium, 4]
		[processor, 1]
	]
	AIValueFactor = 5
	Size = [1, 1] //small 2x2
	IsRotateable = false
	SelectionPriority = 0
	SelectionTypeID = "reactors"
	MaxHealth = 1500 //small 4000
	AutoDoorMaxPathLength = 5
	TypeCategories = [reactor, provides_power]
	ReceivableBuffs : ^/0/ReceivableBuffs []
	CreateUnderlyingWhenDestroyed = false
	IgnoreRotationForMirroredSelection = true
	EditorIcon
	{
		Texture
		{
			File = "./Data/ships/terran/reactor_small/icon.png"
			SampleMode = Linear
		}
		Size = [48, 48]
	}
	Components : ^/0/Components
	{
		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 3500 //small 8000
			StartingResources = &MaxResources
			SuppliesResources = true
			MinResourcesPickUp = 1000
			MaxResourcesPickUp = 1000
			ExpectedResourceGenerationRate = (&../BatteryProducer/ToQuantity) / (&../BatteryProducer/Interval)
			ToggleOnResources = 1001
			ToggleOffResources = 1000
		}
		BatteryProducer
		{
			Type = ResourceConverter
			ToStorage = BatteryStorage
			ToQuantity = 1000
			Interval = .6666 //small .6666
		}

		Graphics
		{
			Type = Graphics
			Location = [.5, .5]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"./Data/ships/terran/reactor_small/floor_on1.png"
							"./Data/ships/terran/reactor_small/floor_on2.png"
							"./Data/ships/terran/reactor_small/floor_on3.png"
							"./Data/ships/terran/reactor_small/floor_on4.png"
							"./Data/ships/terran/reactor_small/floor_on5.png"
							"./Data/ships/terran/reactor_small/floor_on6.png"
							"./Data/ships/terran/reactor_small/floor_on7.png"
							"./Data/ships/terran/reactor_small/floor_on8.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.095
					}
					{
						AnimationFiles
						[
							"./Data/ships/terran/reactor_small/floor_on1_33.png"
							"./Data/ships/terran/reactor_small/floor_on2_33.png"
							"./Data/ships/terran/reactor_small/floor_on3_33.png"
							"./Data/ships/terran/reactor_small/floor_on4_33.png"
							"./Data/ships/terran/reactor_small/floor_on5_33.png"
							"./Data/ships/terran/reactor_small/floor_on6_33.png"
							"./Data/ships/terran/reactor_small/floor_on7_33.png"
							"./Data/ships/terran/reactor_small/floor_on8_33.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.095
					}
					{
						AnimationFiles
						[
							"./Data/ships/terran/reactor_small/floor_on1_66.png"
							"./Data/ships/terran/reactor_small/floor_on2_66.png"
							"./Data/ships/terran/reactor_small/floor_on3_66.png"
							"./Data/ships/terran/reactor_small/floor_on4_66.png"
							"./Data/ships/terran/reactor_small/floor_on5_66.png"
							"./Data/ships/terran/reactor_small/floor_on6_66.png"
							"./Data/ships/terran/reactor_small/floor_on7_66.png"
							"./Data/ships/terran/reactor_small/floor_on8_66.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.095
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "./Data/ships/terran/reactor_small/reactor.png"
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/reactor_small/reactor_33.png"
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/reactor_small/reactor_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"./Data/ships/terran/reactor_small/lights1.png"
							"./Data/ships/terran/reactor_small/lights2.png"
							"./Data/ships/terran/reactor_small/lights3.png"
							"./Data/ships/terran/reactor_small/lights4.png"
							"./Data/ships/terran/reactor_small/lights5.png"
							"./Data/ships/terran/reactor_small/lights6.png"
							"./Data/ships/terran/reactor_small/lights7.png"
							"./Data/ships/terran/reactor_small/lights8.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.075
					}
					{
						AnimationFiles
						[
							"./Data/ships/terran/reactor_small/lights1.png"
							"./Data/ships/terran/reactor_small/lights2.png"
							"./Data/ships/terran/reactor_small/lights3.png"
							"./Data/ships/terran/reactor_small/lights4.png"
							"./Data/ships/terran/reactor_small/lights5.png"
							"./Data/ships/terran/reactor_small/lights6.png"
							"./Data/ships/terran/reactor_small/lights7.png"
							"./Data/ships/terran/reactor_small/lights8.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.075/1.75
					}
					{
						AnimationFiles
						[
							"./Data/ships/terran/reactor_small/lights1.png"
							"./Data/ships/terran/reactor_small/lights2.png"
							"./Data/ships/terran/reactor_small/lights3.png"
							"./Data/ships/terran/reactor_small/lights4.png"
							"./Data/ships/terran/reactor_small/lights5.png"
							"./Data/ships/terran/reactor_small/lights6.png"
							"./Data/ships/terran/reactor_small/lights7.png"
							"./Data/ships/terran/reactor_small/lights8.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.075/2.5
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "./Data/ships/terran/reactor_small/walls.png"
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/reactor_small/walls_33.png"
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/reactor_small/walls_66.png"
						Size = [1, 1]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "./Data/ships/terran/reactor_small/roof.png"
						NormalsFile = "./Data/ships/terran/reactor_small/roof_normals.png"
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/reactor_small/roof_33.png"
						NormalsFile = "./Data/ships/terran/reactor_small/roof_normals_33.png"
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/reactor_small/roof_66.png"
						NormalsFile = "./Data/ships/terran/reactor_small/roof_normals_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						File = "./Data/ships/terran/reactor_small/roof_glows.png"
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/reactor_small/roof_glows_33.png"
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/reactor_small/roof_glows_66.png"
						Size = [1, 1]
					}
				]
			}

			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [3, 3]
						Z = 2.5 // Controls the "height" of the light for the purposes of normal mapping.
						VertexColor = [180*1.0,255*1.0, 77*1.0]
					}
				]
			}
		}

		ReactorHum
		{
			Type = ContinuousEffects
			Location = [.5, .5]
			MaxMediaEffectsZoom = 4
			MediaEffects
			[
				: /BASE_SOUNDS/AudioInterior
				{
					Sound = "./Data/ships/terran/reactor_small/operating.wav"
					Volume = .5
					Speed = .5
					MaxConcurrent = 1
					DynamicVolume : ^/0/DynamicVolume
					{
						ExteriorVolume = .5
					}
				}
			]
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [.5, .5]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			Round = Down
			ResourceLevels
			[
				{
					File = "./Data/ships/terran/reactor_small/batteries1.png"
					Offset = [0.2525, -0.5]
					Size = [0.5, 0.5]
				}
				{
					File = "./Data/ships/terran/reactor_small/batteries2.png"
					Offset = [0.2525, -0.5]
					Size = [0.5, 0.5]
				}
				{
					File = "./Data/ships/terran/reactor_small/batteries3.png"
					Size = [1, 1]
				}
				{
					File = "./Data/ships/terran/reactor_small/batteries4.png"
					Size = [1, 1]
				}
				{
					File = "./Data/ships/terran/reactor_small/batteries5.png"
					Size = [1, 1]
				}
				{
					File = "./Data/ships/terran/reactor_small/batteries6.png"
					Size = [1, 1]
				}
				{
					File = "./Data/ships/terran/reactor_small/batteries7.png"
					Size = [1, 1]
				}
				{
					File = "./Data/ships/terran/reactor_small/batteries8.png"
					Size = [1, 1]
				}
			]
		}

		DestroyedEffects
		{
			Type = DeathEffects
			Location = [.5, .5]

			MediaEffects
			[
				&<./Data/ships/terran/reactor_small/particles/reactor_explode_small.rules>
				&<./Data/ships/terran/reactor_small/particles/reactor_explode_flash_small.rules>
				&<./Data/ships/terran/reactor_small/particles/reactor_shockwave_small.rules>
				&<./Data/common_effects/particles/explosions/med_part_explode_debris.rules>
				&<./Data/common_effects/particles/explosions/big_part_explode_smoke.rules>

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./Data/ships/terran/reactor_small/destroyed.wav"
					Volume = 1
					SpeedVariation = .25
				}

				: /BASE_SHAKE
				{
					ShakeAmount = .25
					Duration = 2
				}
			]

			HitEffects
			[
				{
					Type = ExplosiveDamage
					TotalDamage = 50000 //small 90000
					Radius = 5 //small 6
					Delay = .05
					ExpandDuration = .1
					ExpandStartRadius = 2
					ExpandLoss = 100%
					FireChancePerNDamage = 50%
					ImpulsePerNDamage = 10
					NDamage = 1000
					Filter
					{
						OperationalHealth = true
						StructuralHealth = false
						Friendlies = true
					}
				}
				{
					Type = ExplosiveDamage
					TotalDamage = 12000 //small 20000
					Radius = 3 //small 4
					Delay = .05
					ExpandDuration = .05
					ExpandStartRadius = 2
					ExpandLoss = 100%
					ImpulsePerNDamage = 5
					NDamage = 1000
					Filter
					{
						OperationalHealth = false
						StructuralHealth = true
						Friendlies = true
					}
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [.5, .5]
			Layer = "indicators"
			Indicators
			[
				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [.5, .5]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "./Data/ships/terran/reactor_small/blueprints.png"
			Size = [1, 1]
		}
	}

	Stats
	{
		PowerGeneration = (&~/Part/Components/BatteryProducer/ToQuantity) / (&~/Part/Components/BatteryProducer/Interval) / 1000
		BatterySize = (&~/Part/Components/BatteryStorage/MaxResourcesPickUp) / 1000
		BatteryFillTime = 0
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000
	}
}